//1_google.dox//
import java.util.*;
public class MyClass {
    int j;
    public void comp(int n,int[] a){
    for(int i=0;i<n-1;i++)
    {
        if(a[i]!=a[i+1])
        {
            temp[j]=a[i];
            j++;
        }
    }
    temp[j]=a[n-1];
    for(int j=0;j<n;j++)
    System.out.println(temp[j]);
    }
    public static void main(String args[]) 
    {
        Scanner sc=new Scanner(System.in);
        int n=sc.nextInt();
        int a[]=new int[n];
        int i;
        for(i=0;i<n;i++)
        {
        int a[i]=sc.next();
        }
        int[] temp=new int [100];
        MyClass cc=new MyClass();
        cc.comp(n,a);
    }
}







//2_googledox//
import java.util.*;
 class rotate
{
   void rotateleft(int arr[],int d,int n)
  {
    for(int i=0;i<k;i++)
    {
      rotateOne(arr,n);
    }
     void rotateOne(int arr[],int n)
    {
      int temp;
      temp=arr[0];
      for(int i=0;i<n;i++)
      {
        arr[i]=arr[i+1];
        arr[i]=temp;
      }
     void display(int arr[], int n)
      {
        for(int i=0;i<n;i++)
        Syatem.out.println(arr[i]);
      }
    }
  }   
    public static void main(String args[]) 
    {
      rotate r=new rotate();
      int arr={1,2,3,4,5,6,7};
      r.rotateleft(arr,3,7);
      r.display(arr,7);
    }
}










//2 Method to find number of subarrays of size m whose sum of elements is d//in class//
static void numberOfSubArrays(int[] arr,int n, int d, int m){
       int count = 0;
       int sum = 0;
       //Find out whether there is a way to break the chocolate bar at all
       if(m <= n)
           for(int i = 0; i < m; i++)
               sum += arr[i];
       if(sum == d)
           count++;
       //Check other possible ways to break the bar using a sliding window
       for(int i = 0; i < n-m; i++)
       {
           sum = sum - arr[i] + arr[i+m];
           if(sum == d) count++;
       }
       System.out.println(count);
   }
